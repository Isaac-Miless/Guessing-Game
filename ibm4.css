@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap");

/* Variables */
:root {
  --pink: #ff007f;
  --dark_purple: hsl(276.47, 100%, 10%);
  --off-white: #fcfcfc;
  --gray: #5251518d;
  --light-gray: #5251514a;
}

/* Backdrop -> Half-Transparent Black */
::backdrop {
  background: rgba(0, 0, 0, 0.5);
}

/* Setting Main Layout Properites */
body,
html {
  /* Imported font at the top of the document, "Poppins", from
  Google Fonts */
  font-family: "Poppins", sans-serif;
  background: linear-gradient(
    to bottom,
    hsl(273.6, 100%, 4.9%) 0%,
    hsl(276.47, 100%, 10%) 100%
  );
  height: 100%;
  margin: 0;
  color: var(--off-white);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}

/* Generic Button Styling */
button {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  border: 2px solid var(--pink);
  cursor: pointer;
  background: var(--dark_purple);
  color: var(--off-white);
  outline: none;
  transition: border 0.3s ease-in-out, color 0.3s ease-in-out;
}

button:hover {
  color: var(--pink);
}

button:disabled {
  border: 1px solid red;
  color: red;
  cursor: not-allowed;
}

/* Grid positioning, among other properties, specific
for the start button */
#start-btn {
  margin: 2rem 1rem 0 1rem;
  padding: 1rem 4rem;
  grid-column: 1 / -1;
  grid-row: 2 / 2;
}

/* The form where the user selects the number range, setting
up the grid layout and aligment of items (vertically and 
horizontally centred) */
#number-range-form {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  justify-content: center;
  align-items: center;
}

/* The radio dials in the #number-range-form */
input[type="radio"] + label {
  display: inline-block;
  margin: 0 1rem;
  padding: 0.5rem 1rem;
  border: 2px solid var(--light-gray);
  border-radius: 0.5rem;
  cursor: pointer;
  transition: border 0.3s ease-in-out;
}

input[type="radio"]:hover + label {
  border: 2px solid var(--gray);
  border-radius: 0.5rem;
}

input[type="radio"]:checked + label {
  border: 2px solid var(--pink);
  border-radius: 0.5rem;
}

/* Remove the decoration, leaving the label (still with radio
functionality */
input[type="radio"] {
  display: none;
}

h1 {
  font-size: 2.5rem;
  padding: 0 3rem;
  position: relative;
}

/* The "Number" in the title, and also the revealed number
in the losing modal */
.title-decor {
  color: var(--pink);
}

.game-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  height: 100%;
  justify-content: center;
  position: relative;
  border-radius: 0.5rem;
}

.start-screen,
.game-screen {
  display: flex;
  gap: 5rem;
  padding: 2rem;
  align-items: center;
  width: 100%;
  height: 100%;
  justify-content: center;
  position: relative;
}

.start-screen {
  flex-direction: column;
  gap: 1rem;
  animation: fadeIn 1s forwards;
}

.game-screen {
  flex-direction: row;
}

/* Where the user inputs their guess */
input[type="number"] {
  outline: none;
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  border: 1px solid var(--pink);
  background: var(--dark_purple);
  color: var(--off-white);
}

/* The guess list */
.guess-record {
  border: 1px solid var(--pink);
  height: 100%;
  overflow: auto;
  border-radius: 0.5rem;
  padding: 1rem;
  justify-content: center;
  display: flex;
  flex-direction: column;
  justify-content: start;
}

#guess-record-label {
  font-size: 1rem;
  padding: 0;
  margin-bottom: 0;
  border-bottom: 1px solid var(--pink);
}

/* Remove the decoration */
ul {
  list-style-type: none;
}

/* Allow for the arrows (showing whether the player
needs to go higher/lower) directly next to their guess */
#guess-list {
  display: grid;
  grid-template-columns: 1fr 1fr;
  padding: 0;
}

#guess-list li,
#guess-list div {
  padding: 8px;
}

ul li::marker {
  color: var(--pink);
}

/* Updated in JS */
#hint {
  color: transparent;
}

/* Modal styling */
#modal {
  width: 50%;
  height: 35%;
  color: white;
  border: 1px solid var(--pink);
  background: var(--dark_purple);
  border-radius: 0.5rem;
  align-items: center;
  justify-content: center;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

#modal-message {
  position: relative;
  top: 30%;
  font-size: 1rem;
  padding: 0;
  margin: 0;
  font-size: 1.5rem;
}

#modal-btn {
  position: relative;
  margin-top: 3rem;
  width: 50%;
  top: 40%;
}

/* Added/removed from elements depending on
where they are in the game */
.hidden {
  display: none;
}

/* Remove arrows from input[type="number"] */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Media Queries */
@media (max-width: 768px) {
  /* remove any horizontal overflow */
  body {
    overflow-x: hidden;
  }
  /* Change any flex directions to column,
  making the guess list appear below instead
  of to the side */
  .game-container {
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  .game-screen {
    flex-direction: column;
  }

  #input-form {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;
  }

  #check-btn,
  #guess-input {
    width: 15rem;
  }

  #guess-input {
    text-align: center;
  }

  #check-btn {
    margin-top: 1rem;
  }

  .right {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .guess-record {
    margin-top: 0;
    width: 70%;
  }
}

/* Keyframes */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(10%);
  }
}
